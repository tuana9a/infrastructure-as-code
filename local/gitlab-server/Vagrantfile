# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  public_key_file = ENV["VG_PUBLIC_KEY_FILE"] || "#{Dir.home}/.ssh/id_rsa.pub"
  
  instance_username = "vagrant"
  instance_name = ENV["VG_INSTANCE_NAME"] ||"gitlab-instance"
  instance_ip = ENV["VG_INSTANCE_IP"] || "192.168.20.5"
  instance_hostname = ENV["VG_INSTANCE_HOSTNAME"] || "gitlab.local"
  instance_ssh_port = ENV["VG_INSTANCE_SSH_PORT"] || 2222
  
  gitlab_image_file_name = "gitlab-ee-14.9.5.tar.gz"
  gitlab_runner_image_file_name = "gitlab-runner-14.8.3.tar.gz"

  # define a scope for each instance
  config.vm.define instance_name do |ins|
    ins.vm.box = "hashicorp/bionic64"
    ins.vm.hostname = instance_name
    ins.vm.network "private_network", ip: instance_ip

    ins.vm.provider "virtualbox" do |vb|
      vb.name = instance_name
      vb.memory = 4096
      vb.cpus = 2
    end
    
    # prepare hostname and ssh
    ins.vm.provision "shell" do |s|
      public_key_content = File.readlines(public_key_file).first.strip
            
      s.inline = <<-SHELL
        echo #{public_key_content} >> /home/#{instance_username}/.ssh/authorized_keys
        echo #{instance_ip} #{instance_hostname} >> /etc/hosts
      SHELL
    end

    # install docker
    ins.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbook.yaml"
    end

    # load pre-existing docker images
    ins.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        docker load -i /vagrant/.local/#{gitlab_image_file_name}
        docker load -i /vagrant/.local/#{gitlab_runner_image_file_name}
      SHELL
    end

    # create config dir for gitlab
    ins.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        mkdir -p /etc/gitlab/ssl
      SHELL
    end

    # change default ssh port to 2222 becase 22 will be used for gitlab
    ins.vm.provision "shell" do |s|
      public_key_content = File.readlines(public_key_file).first.strip
            
      s.inline = <<-SHELL
        echo Port #{instance_ssh_port} >> /etc/ssh/sshd_config
        systemctl restart sshd
      SHELL
    end

  end

end